<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:c="http://www.springframework.org/schema/c"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
  		http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg>
			<bean class="org.springframework.data.redis.connection.RedisStandaloneConfiguration"
	    		c:host-name="${redis.host}" c:port="${redis.port}" />
		</constructor-arg>		
	</bean>
	
	<!-- <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
		<constructor-arg>
			<bean class="org.springframework.data.redis.connection.RedisSentinelConfiguration">			
				<constructor-arg name="master" value="myMaster"/>
				<constructor-arg name="sentinelHostAndPorts">
			        <set>
			            <value></value>			            
			        </set>
			    </constructor-arg>
			</bean>
		</constructor-arg>		
	</bean> -->
	
	<bean id="redisCacheManager" class="org.springframework.data.redis.cache.RedisCacheManager"
		factory-method="create" c:connection-factory-ref="jedisConnectionFactory" />

    <!-- 如果不指定序列化策略，StringRedisTemplate的key和value都将采用String序列化策略； -->
    <!-- 但是RedisTemplate的key和value都将采用JDK序列化 这样就会出现采用不同template保存的数据不能用同一个template删除的问题 -->
    <bean id="stringRedisSerializer"  class="org.springframework.data.redis.serializer.StringRedisSerializer" />
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
        <property name="connectionFactory" ref="jedisConnectionFactory" />
        <property name="keySerializer" ref="stringRedisSerializer" />
        <property name="hashKeySerializer" ref="stringRedisSerializer" />
    </bean>
    
    <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate" p:connection-factory-ref="jedisConnectionFactory"/>
    
</beans>